1. What is onGenerateRoute?

onGenerateRoute is a central function in MaterialApp that decides what screen to show when you navigate using a route name.

Instead of defining routes in a simple routes map, you use this function for more control.



2. Why Use onGenerateRoute?

When you need to:

Pass arguments to a screen in a flexible way.

Handle dynamic routes (like /user/123 or /product/45).

Provide a default screen if the route name doesn’t match.



3. How It Works (Conceptually)

You define onGenerateRoute inside MaterialApp.

Whenever you call Navigator.pushNamed, Flutter checks this function.

It matches the route name (settings.name) and returns the correct page wrapped in a MaterialPageRoute.

You can also get settings.arguments if data was passed.



4. Example Flow

Define onGenerateRoute in MaterialApp.

Use Navigator.pushNamed(context, "/details", arguments: "Hello").

In onGenerateRoute, check the name /details and send "Hello" to that page.



5. Advantages

Flexible: You can handle complex navigation logic.

Dynamic: Supports route parameters & arguments.

Error Handling: You can show a "Page Not Found" screen for unknown routes.



6. Real-Life Analogy

Think of onGenerateRoute as a receptionist in an office:

When someone asks for a department (route), the receptionist checks the request and sends them to the right room.

If the request has extra details (arguments), they forward them too.

If the room doesn’t exist, they send you to the "Not Found" room.